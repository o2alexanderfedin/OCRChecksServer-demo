name: CD - Deployment and Smoke Tests

on:
  push:
    branches: [ main, develop ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for deployment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - production
      skip_smoke_tests:
        description: 'Skip smoke tests after deployment'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  # Ensure CI passes before deployment
  ci:
    name: CI - Unit Tests (Required for CD)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run CI Pipeline (Unit Tests)
        run: npm run ci
  
  cd:
    name: CD Pipeline - Deploy and Test
    runs-on: ubuntu-latest
    needs: ci  # CD only runs if CI passes
    
    environment: 
      name: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production') || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create .dev.vars file
        run: |
          echo "MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }}" > .dev.vars
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> .dev.vars
        
      - name: Deploy to single environment (manual)
        if: github.event.inputs.environment
        run: npm run deploy:${{ github.event.inputs.environment }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        
      - name: Deploy to all environments (automatic)
        if: github.event.inputs.environment == ''
        run: npm run cd
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          SKIP_SMOKE: ${{ github.event.inputs.skip_smoke_tests == 'true' && '--skip-smoke' || '' }}
        
      - name: Upload deployment logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cd-deployment-logs-${{ github.run_number }}
          path: |
            smoke-test-results-*.json
            deployment-*.log
          retention-days: 30
          
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: cd
    if: always()
    
    steps:
      - name: Deployment Success Notification
        if: needs.cd.result == 'success'
        run: |
          echo "✅ CD Pipeline completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production') || 'dev' }}"
          echo "All deployments and smoke tests passed."
          
      - name: Deployment Failure Notification  
        if: needs.cd.result == 'failure'
        run: |
          echo "❌ CD Pipeline failed!"
          echo "Environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production') || 'dev' }}"
          echo "Check deployment logs for details."
          exit 1